// Program.cs
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;

var builder = WebApplication.CreateBuilder(args);

// Add services to the container.
builder.Services.AddControllers();
builder.Services.AddSingleton<IWeatherService, WeatherService>();

var app = builder.Build();

// Configure the HTTP request pipeline.
if (app.Environment.IsDevelopment())
{
    app.UseDeveloperExceptionPage();
}

app.UseRouting();

app.UseAuthorization();

app.MapControllers();

app.Run();

// IWeatherService.cs
public interface IWeatherService
{
    IEnumerable<string> GetForecast();
}

// WeatherService.cs
public class WeatherService : IWeatherService
{
    public IEnumerable<string> GetForecast()
    {
        return new List<string>
        {
            "Sunny",
            "Cloudy",
            "Rainy",
            "Windy"
        };
    }
}

// Controllers/WeatherController.cs
using Microsoft.AspNetCore.Mvc;

[ApiController]
[Route("api/[controller]")]
public class WeatherController : ControllerBase
{
    private readonly IWeatherService _weatherService;

    public WeatherController(IWeatherService weatherService)
    {
        _weatherService = weatherService;
    }

    [HttpGet("forecast")]
    public IActionResult GetForecast()
    {
        var forecast = _weatherService.GetForecast();
        return Ok(forecast);
    }
}
